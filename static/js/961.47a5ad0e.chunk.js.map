{"version":3,"file":"static/js/961.47a5ad0e.chunk.js","mappings":"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","sources":["api/gallery/query.ts","components/EditableImage/EditableImage.tsx","utils/canvas/imaging.ts","components/EditableImage/FilterControls.tsx","components/EditableImage/ResizeControls.tsx","pages/Editor/index.tsx","pages/Editor/useImageEdits.ts","utils/images/download.ts"],"sourcesContent":["const baseUrl = \"https://picsum.photos\";\n\ninterface ApiImage {\n  id: string;\n  author: string;\n  url: string;\n  width: number;\n  height: number;\n  download_url: string;\n}\n\nexport interface GalleryImagesResponse {\n  hasMore: boolean;\n  images: {\n    id: string;\n    author: string;\n    preview: string;\n    src: string;\n  }[];\n}\n\nexport async function fetchImages(\n  page = 1,\n  limit = 20\n): Promise<GalleryImagesResponse> {\n  const request = await fetch(`${baseUrl}/v2/list?page=${page}&limit=${limit}`);\n  const response: ApiImage[] = await request.json();\n  const images = response.map(({ id, author, download_url }) => ({\n    id,\n    author,\n    preview: `https://picsum.photos/id/${id}/200`,\n    src: download_url,\n  }));\n\n  return {\n    hasMore: !!request.headers.get(\"Link\")?.includes('rel=\"next\"'),\n    images,\n  };\n}\n\nexport interface GalleryImageResponse {\n  author: string;\n  src: string;\n  height: number;\n  width: number;\n}\n\nexport async function fetchImage(id: string): Promise<GalleryImageResponse> {\n  const request = await fetch(`${baseUrl}/id/${id}/info`);\n  const { author, download_url, height, width }: ApiImage =\n    await request.json();\n\n  return {\n    author,\n    src: download_url,\n    height,\n    width,\n  };\n}\n","import { forwardRef, useEffect, useRef } from \"react\";\nimport { drawImage } from \"../../utils/canvas\";\n\nexport interface EditableImageProps {\n  src: string;\n  width: number;\n  height: number;\n  blur?: number;\n  grayscale?: number;\n}\n\nexport const EditableImage = forwardRef<HTMLCanvasElement, EditableImageProps>(\n  (props, ref) => {\n    const fallBackRef = useRef<HTMLCanvasElement>(null);\n    const canvasRef = ref || fallBackRef;\n    const { src, width, height, blur = 0, grayscale = 0 } = props;\n\n    useEffect(() => {\n      if (canvasRef && \"current\" in canvasRef && canvasRef.current) {\n        drawImage(canvasRef.current, src, [width, height], {\n          blur: `${blur}px`,\n          grayscale: `${grayscale}%`,\n        });\n      }\n    }, [src, width, height, blur, grayscale, canvasRef]);\n\n    return (\n      <>\n        <canvas ref={canvasRef} height={height} width={width} />\n      </>\n    );\n  }\n);\n","export function drawImage(\n  canvas: HTMLCanvasElement,\n  src: string,\n  dimensions: [number, number],\n  filters?: { [key: string]: string }\n) {\n  const ctx = canvas.getContext(\"2d\");\n  if (!ctx) throw Error(\"issue with 2d context on canvas\");\n\n  const image = new Image();\n  // fix tainted exception for downloading x-origin\n  image.crossOrigin = \"anonymous\";\n  image.src = src;\n  image.onload = () => {\n    if (filters) {\n      ctx.filter = Object.keys(filters)\n        .map((key) => `${key}(${filters[key]})`)\n        .join(\" \");\n    }\n    ctx.drawImage(image, 0, 0, dimensions[0], dimensions[1]);\n  };\n}\n\nexport function downloadAsImage(canvas: HTMLCanvasElement, fileName: string) {\n  const imageContent = canvas.toDataURL();\n  const downloadLink = document.createElement(\"a\");\n  downloadLink.download = fileName;\n  downloadLink.href = imageContent;\n  downloadLink.click();\n}\n","import { Box, Slider, Stack, Typography } from \"@mui/material\";\nimport { SyntheticEvent, useEffect, useState } from \"react\";\n\ninterface FilterControlsProps {\n  blur: number;\n  grayscale: number;\n  onChangeBlur: (value: number) => void;\n  onChangeGrayscale: (value: number) => void;\n}\n\nexport function FilterControls({\n  blur = 0,\n  grayscale = 0,\n  onChangeBlur,\n  onChangeGrayscale,\n}: FilterControlsProps) {\n  const [currentBlur, setCurrentBlur] = useState<number>(blur);\n  const [currentGrayscale, setCurrentGrayscale] = useState<number>(grayscale);\n\n  const handleChangeBlur = (\n    e: Event | SyntheticEvent<Element, Event>,\n    value: number | number[]\n  ) => {\n    setCurrentBlur(Number(value));\n    onChangeBlur(Number(value));\n  };\n\n  const handleChangeGrayscale = (\n    e: Event | SyntheticEvent<Element, Event>,\n    value: number | number[]\n  ) => {\n    setCurrentGrayscale(Number(value));\n    onChangeGrayscale(value as number);\n  };\n\n  useEffect(() => {\n    setCurrentBlur(blur);\n  }, [blur]);\n\n  useEffect(() => {\n    setCurrentGrayscale(grayscale);\n  }, [grayscale]);\n\n  return (\n    <Stack direction={\"column\"} gap={1} padding={2}>\n      <Box>\n        <Typography id=\"blur-slider\">Blur</Typography>\n        <Slider\n          aria-labelledby=\"blur-slider\"\n          value={currentBlur}\n          aria-label=\"Blur level\"\n          min={0}\n          max={10}\n          valueLabelDisplay=\"auto\"\n          onChange={(e, value: number | number[]) => setCurrentBlur(Number(value))}\n          onChangeCommitted={handleChangeBlur}\n        />\n      </Box>\n      <Box>\n        <Typography id=\"grayscale-slider\">Grayscale (%)</Typography>\n        <Slider\n          aria-labelledby=\"grayscale-slider\"\n          value={currentGrayscale}\n          aria-label=\"Grayscale level\"\n          min={0}\n          max={100}\n          valueLabelDisplay=\"auto\"\n          onChange={(e, value: number | number[]) => setCurrentGrayscale(Number(value))}\n          onChangeCommitted={handleChangeGrayscale}\n        />\n      </Box>\n    </Stack>\n  );\n}\n","import { Button, Stack, TextField } from \"@mui/material\";\nimport { ChangeEvent, useEffect, useState } from \"react\";\n\nexport interface ResizeControlsProps {\n  height: number;\n  width: number;\n  onChangeDimensions: (width: number, height: number) => void;\n}\n\nexport function ResizeControls({\n  width,\n  height,\n  onChangeDimensions,\n}: ResizeControlsProps) {\n  const [currentHeight, setCurrentHeight] = useState<string>(height.toString());\n  const [currentWidth, setCurrentWidth] = useState<string>(width.toString());\n\n  const onChangeWidth = (\n    e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n  ) => setCurrentWidth(e.target.value);\n\n  const onChangeHeight = (\n    e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n  ) => setCurrentHeight(e.target.value);\n\n  useEffect(() => {\n    setCurrentHeight(height.toString());\n  }, [height]);\n\n  useEffect(() => {\n    setCurrentWidth(width.toString());\n  }, [width]);\n\n  const handleApply = () => {\n    onChangeDimensions(Number(currentWidth), Number(currentHeight));\n  };\n\n  return (\n    <Stack direction={\"column\"} gap={1} padding={1}>\n      <TextField\n        required\n        id=\"outlined-required\"\n        label=\"Width\"\n        value={currentWidth}\n        onChange={onChangeWidth}\n        name={'width'}\n      />\n      <TextField\n        required\n        id=\"outlined-required\"\n        label=\"Height\"\n        value={currentHeight}\n        onChange={onChangeHeight}\n        name={'height'}\n      />\n      <Button variant=\"contained\" onClick={handleApply}>\n        Apply\n      </Button>\n    </Stack>\n  );\n}\n","import { useRef } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useQuery } from \"react-query\";\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Box,\n  Button,\n  Stack,\n  Typography,\n} from \"@mui/material\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport { fetchImage } from \"../../api/gallery\";\nimport { Loading } from \"../../components/Loading\";\nimport {\n  EditableImage,\n  FilterControls,\n  ResizeControls,\n} from \"../../components/EditableImage\";\nimport { downloadAsImage } from \"../../utils/canvas\";\nimport { downloadImage } from \"../../utils/images\";\nimport { useImageEdits } from \"./useImageEdits\";\n\nexport default function Editor() {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const { imageId } = useParams<{ imageId: string }>();\n  const { isLoading, error, data } = useQuery({\n    queryKey: [\"gallery\", imageId],\n    queryFn: () => fetchImage(imageId!),\n    keepPreviousData: true,\n  });\n  const {\n    width,\n    height,\n    blur,\n    grayscale,\n    onChangeBlur,\n    onChangeGrayscale,\n    onChangeDimensions,\n  } = useImageEdits();\n\n  if (isLoading) return <Loading />;\n  if (!data || error) return <>An error has occurred</>;\n\n  const onDownloadImage = () => {\n    if (canvasRef.current) {\n      downloadAsImage(canvasRef.current, \"edited.png\");\n    }\n  };\n\n  const onDownloadOriginal = () => {\n    downloadImage(data.src, \"original.png\");\n  };\n\n  return (\n    <>\n      <EditableImage\n        ref={canvasRef}\n        src={data.src}\n        height={height || data.height}\n        width={width || data.width}\n        blur={blur}\n        grayscale={grayscale}\n      />\n      <Box\n        position={\"fixed\"}\n        top={50}\n        right={50}\n        bgcolor={\"white\"}\n        sx={{ opacity: 0.8 }}\n      >\n        <Accordion>\n          <AccordionSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel1a-content\"\n            id=\"panel1a-header\"\n          >\n            <Typography>Dimensions</Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n            <ResizeControls\n              height={height || data.height}\n              width={width || data.width}\n              onChangeDimensions={onChangeDimensions}\n            />\n          </AccordionDetails>\n        </Accordion>\n        <Accordion>\n          <AccordionSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel2a-content\"\n            id=\"panel2a-header\"\n          >\n            <Typography>Filters</Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n            <FilterControls\n              blur={blur}\n              grayscale={grayscale}\n              onChangeBlur={onChangeBlur}\n              onChangeGrayscale={onChangeGrayscale}\n            />\n          </AccordionDetails>\n        </Accordion>\n        <Accordion>\n          <AccordionSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel3a-content\"\n            id=\"panel3a-header\"\n          >\n            <Typography>Download</Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n            <Stack>\n              <Button variant=\"contained\" onClick={onDownloadImage}>\n                Download Edited Image\n              </Button>\n              <Button onClick={onDownloadOriginal}>\n                Download Original Image\n              </Button>\n            </Stack>\n          </AccordionDetails>\n        </Accordion>\n      </Box>\n    </>\n  );\n}\n","import { useCallback } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\n\nexport function useImageEdits() {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const width = Number(searchParams.get(\"width\"));\n  const height = Number(searchParams.get(\"height\"));\n  const blur = Number(searchParams.get(\"blur\")) || 0;\n  const grayscale = Number(searchParams.get(\"grayscale\")) || 0;\n\n  const onChangeBlur = useCallback(\n    (value: number) => {\n      setSearchParams((searchParams) => {\n        searchParams.set(\"blur\", value.toString());\n        return searchParams;\n      });\n    },\n    [setSearchParams]\n  );\n\n  const onChangeGrayscale = useCallback(\n    (value: number) => {\n      setSearchParams((searchParams) => {\n        searchParams.set(\"grayscale\", value.toString());\n        return searchParams;\n      });\n    },\n    [setSearchParams]\n  );\n\n  const onChangeDimensions = useCallback(\n    (width: number, height: number) => {\n      setSearchParams((searchParams) => {\n        searchParams.set(\"width\", width.toString());\n        searchParams.set(\"height\", height.toString());\n        return searchParams;\n      });\n    },\n    [setSearchParams]\n  );\n\n  return {\n    height,\n    width,\n    blur,\n    grayscale,\n    onChangeDimensions,\n    onChangeBlur,\n    onChangeGrayscale,\n  };\n}\n","export async function downloadImage(src: string, fileName: string) {\n  const blob = await fetch(src).then((res) => res.blob());\n  const content = URL.createObjectURL(blob);\n  var link = document.createElement(\"a\");\n  link.href = content;\n  link.download = fileName;\n  link.click();\n}\n"],"names":["baseUrl","async","fetchImages","_request$headers$get","page","arguments","length","undefined","limit","request","fetch","concat","images","json","map","_ref","id","author","download_url","preview","src","hasMore","headers","get","includes","fetchImage","height","width","EditableImage","forwardRef","props","ref","fallBackRef","useRef","canvasRef","blur","grayscale","useEffect","current","canvas","dimensions","filters","ctx","getContext","Error","image","Image","crossOrigin","onload","filter","Object","keys","key","join","drawImage","_jsx","_Fragment","children","FilterControls","onChangeBlur","onChangeGrayscale","currentBlur","setCurrentBlur","useState","currentGrayscale","setCurrentGrayscale","_jsxs","Stack","direction","gap","padding","Box","Typography","Slider","value","min","max","valueLabelDisplay","onChange","e","Number","onChangeCommitted","handleChangeBlur","handleChangeGrayscale","ResizeControls","onChangeDimensions","currentHeight","setCurrentHeight","toString","currentWidth","setCurrentWidth","TextField","required","label","target","name","Button","variant","onClick","handleApply","Editor","imageId","useParams","isLoading","error","data","useQuery","queryKey","queryFn","keepPreviousData","searchParams","setSearchParams","useSearchParams","useCallback","set","useImageEdits","Loading","position","top","right","bgcolor","sx","opacity","Accordion","AccordionSummary","expandIcon","ExpandMoreIcon","AccordionDetails","onDownloadImage","fileName","imageContent","toDataURL","downloadLink","document","createElement","download","href","click","downloadAsImage","onDownloadOriginal","blob","then","res","content","URL","createObjectURL","link","downloadImage"],"sourceRoot":""}