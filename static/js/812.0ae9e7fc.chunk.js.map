{"version":3,"file":"static/js/812.0ae9e7fc.chunk.js","mappings":"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","sources":["api/gallery/query.ts","components/EditableImage/EditableImage.tsx","utils/canvas/imaging.ts","components/EditableImage/FilterControls.tsx","components/EditableImage/ResizeControls.tsx","pages/Editor/index.tsx","pages/Editor/useImageEdits.ts"],"sourcesContent":["const baseUrl = \"https://picsum.photos\";\n\ninterface ApiImage {\n  id: string;\n  author: string;\n  url: string;\n  width: number;\n  height: number;\n  download_url: string;\n}\n\nexport interface GalleryImagesResponse {\n  hasMore: boolean;\n  images: {\n    id: string;\n    author: string;\n    preview: string;\n    src: string;\n  }[];\n}\n\nexport async function fetchImages(\n  page = 1,\n  limit = 20\n): Promise<GalleryImagesResponse> {\n  const request = await fetch(`${baseUrl}/v2/list?page=${page}&limit=${limit}`);\n  const response: ApiImage[] = await request.json();\n  const images = response.map(({ id, author, download_url }) => ({\n    id,\n    author,\n    preview: `https://picsum.photos/id/${id}/200`,\n    src: download_url,\n  }));\n\n  return {\n    hasMore: !!request.headers.get(\"Link\")?.includes('rel=\"next\"'),\n    images,\n  };\n}\n\nexport interface GalleryImageResponse {\n  author: string;\n  src: string;\n  height: number;\n  width: number;\n}\n\nexport async function fetchImage(id: string): Promise<GalleryImageResponse> {\n  const request = await fetch(`${baseUrl}/id/${id}/info`);\n  const { author, download_url, height, width }: ApiImage =\n    await request.json();\n\n  return {\n    author,\n    src: download_url,\n    height,\n    width,\n  };\n}\n","import { forwardRef, useEffect, useRef } from \"react\";\nimport { drawImage } from \"../../utils/canvas\";\n\nexport interface EditableImageProps {\n  src: string;\n  width: number;\n  height: number;\n  blur?: number;\n  grayscale?: number;\n}\n\nexport const EditableImage = forwardRef<HTMLCanvasElement, EditableImageProps>(\n  (props, ref) => {\n    const fallBackRef = useRef<HTMLCanvasElement>(null);\n    const canvasRef = ref || fallBackRef;\n    const { src, width, height, blur = 0, grayscale = 0 } = props;\n\n    useEffect(() => {\n      if (canvasRef && \"current\" in canvasRef && canvasRef.current) {\n        drawImage(canvasRef.current, src, [width, height], {\n          blur: `${blur}px`,\n          grayscale: `${grayscale}%`,\n        });\n      }\n    }, [src, width, height, blur, grayscale, canvasRef]);\n\n    return <canvas ref={canvasRef} height={height} width={width} />;\n  }\n);\n","export function drawImage(\n  canvas: HTMLCanvasElement,\n  src: string,\n  dimensions: [number, number],\n  filters?: { [key: string]: string }\n) {\n  const ctx = canvas.getContext(\"2d\");\n  if (!ctx) throw Error(\"issue with 2d context on canvas\");\n\n  const image = new Image();\n  // fix tainted exception for downloading x-origin\n  image.crossOrigin = \"anonymous\";\n  image.src = src;\n  image.onload = () => {\n    if (filters) {\n      ctx.filter = Object.keys(filters)\n        .map((key) => `${key}(${filters[key]})`)\n        .join(\" \");\n    }\n    ctx.drawImage(image, 0, 0, dimensions[0], dimensions[1]);\n  };\n}\n\nexport function downloadAsImage(canvas: HTMLCanvasElement, fileName: string) {\n  const imageContent = canvas.toDataURL();\n  const downloadLink = document.createElement(\"a\");\n  downloadLink.download = `${fileName}.png`;\n  downloadLink.href = imageContent;\n  downloadLink.click();\n}\n","import { Box, Slider, Stack, Typography } from \"@mui/material\";\nimport { SyntheticEvent } from \"react\";\n\ninterface FilterControlsProps {\n  blur: number;\n  grayscale: number;\n  onChangeBlur: (value: number) => void;\n  onChangeGrayscale: (value: number) => void;\n}\n\nexport function FilterControls({\n  blur = 0,\n  grayscale = 0,\n  onChangeBlur,\n  onChangeGrayscale,\n}: FilterControlsProps) {\n  const handleChangeBlur = (\n    e: Event | SyntheticEvent<Element, Event>,\n    value: number | number[]\n  ) => onChangeBlur(value as number);\n\n  const handleChangeGrayscale = (\n    e: Event | SyntheticEvent<Element, Event>,\n    value: number | number[]\n  ) => onChangeGrayscale(value as number);\n\n  return (\n    <Stack direction={\"column\"} gap={1} padding={2}>\n      <Box>\n        <Typography id=\"blur-slider\">Blur</Typography>\n        <Slider\n          aria-labelledby=\"blur-slider\"\n          defaultValue={blur}\n          aria-label=\"Blur level\"\n          min={0}\n          max={10}\n          valueLabelDisplay=\"auto\"\n          onChangeCommitted={handleChangeBlur}\n        />\n      </Box>\n      <Box>\n        <Typography id=\"grayscale-slider\">Grayscale (%)</Typography>\n        <Slider\n          aria-labelledby=\"grayscale-slider\"\n          defaultValue={grayscale}\n          aria-label=\"Grayscale level\"\n          min={0}\n          max={100}\n          valueLabelDisplay=\"auto\"\n          onChangeCommitted={handleChangeGrayscale}\n        />\n      </Box>\n    </Stack>\n  );\n}\n","import { Button, Stack, TextField } from \"@mui/material\";\nimport { useRef } from \"react\";\n\nexport interface ResizeControlsProps {\n  height: number;\n  width: number;\n  onChangeDimensions: (width: number, height: number) => void;\n}\n\nexport function ResizeControls({\n  width,\n  height,\n  onChangeDimensions,\n}: ResizeControlsProps) {\n  const heightRef = useRef<HTMLInputElement>(null);\n  const widthRef = useRef<HTMLInputElement>(null);\n\n  const handleApply = () => {\n    if (widthRef.current && heightRef.current) {\n      onChangeDimensions(\n        Number(widthRef.current.value),\n        Number(heightRef.current.value)\n      );\n    }\n  };\n\n  return (\n    <Stack direction={\"column\"} gap={1} padding={1}>\n      <TextField\n        data-testid={\"width-textfield\"}\n        inputRef={widthRef}\n        required\n        id=\"outlined-required\"\n        label=\"Width\"\n        defaultValue={width}\n      />\n      <TextField\n        data-testid={\"height-textfield\"}\n        inputRef={heightRef}\n        required\n        id=\"outlined-required\"\n        label=\"Height\"\n        defaultValue={height}\n      />\n      <Button variant=\"contained\" onClick={handleApply}>\n        Apply\n      </Button>\n    </Stack>\n  );\n}\n","import { useRef } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useQuery } from \"react-query\";\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Box,\n  Button,\n  Stack,\n  Typography,\n} from \"@mui/material\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport { fetchImage } from \"../../api/gallery\";\nimport { Loading } from \"../../components/Loading\";\nimport {\n  EditableImage,\n  FilterControls,\n  ResizeControls,\n} from \"../../components/EditableImage\";\nimport { useImageEdits } from \"./useImageEdits\";\nimport { downloadAsImage } from \"../../utils/canvas\";\n\nexport default function Editor() {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const { imageId } = useParams<{ imageId: string }>();\n  const { isLoading, error, data } = useQuery({\n    queryKey: [\"gallery\", imageId],\n    queryFn: () => fetchImage(imageId!),\n    keepPreviousData: true,\n  });\n  const {\n    width,\n    height,\n    blur,\n    grayscale,\n    onChangeBlur,\n    onChangeGrayscale,\n    onChangeDimensions,\n  } = useImageEdits();\n\n  if (isLoading) return <Loading />;\n  if (!data || error) return <>An error has occurred</>;\n\n  const onDownloadImage = () => {\n    if (canvasRef.current) {\n      downloadAsImage(canvasRef.current, 'edited');\n    }\n  };\n\n  return (\n    <>\n      <EditableImage\n        ref={canvasRef}\n        src={data.src}\n        height={height || data.height}\n        width={width || data.width}\n        blur={blur}\n        grayscale={grayscale}\n      />\n      <Box\n        position={\"fixed\"}\n        top={50}\n        right={50}\n        bgcolor={\"white\"}\n        sx={{ opacity: 0.8 }}\n      >\n        <Accordion>\n          <AccordionSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel1a-content\"\n            id=\"panel1a-header\"\n          >\n            <Typography>Dimensions</Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n            <ResizeControls\n              height={height || data.height}\n              width={width || data.width}\n              onChangeDimensions={onChangeDimensions}\n            />\n          </AccordionDetails>\n        </Accordion>\n        <Accordion>\n          <AccordionSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel2a-content\"\n            id=\"panel2a-header\"\n          >\n            <Typography>Filters</Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n            <FilterControls\n              blur={blur}\n              grayscale={grayscale}\n              onChangeBlur={onChangeBlur}\n              onChangeGrayscale={onChangeGrayscale}\n            />\n          </AccordionDetails>\n        </Accordion>\n        <Accordion>\n          <AccordionSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel3a-content\"\n            id=\"panel3a-header\"\n          >\n            <Typography>Download</Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n            <Stack>\n              <Button variant=\"contained\" onClick={onDownloadImage}>\n                Download Edited Image\n              </Button>\n            </Stack>\n          </AccordionDetails>\n        </Accordion>\n      </Box>\n    </>\n  );\n}\n","import { useSearchParams } from \"react-router-dom\";\n\nexport function useImageEdits() {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const width = Number(searchParams.get(\"width\"));\n  const height = Number(searchParams.get(\"height\"));\n  const blur = Number(searchParams.get(\"blur\")) || 0;\n  const grayscale = Number(searchParams.get(\"grayscale\")) || 0;\n\n  const updateSearchParam = (key: string, value: string) => {\n    let updatedSearchParams = new URLSearchParams(searchParams.toString());\n    updatedSearchParams.set(key, value);\n    setSearchParams(updatedSearchParams.toString());\n  };\n\n  const onChangeBlur = (value: number) => {\n    updateSearchParam(\"blur\", value.toString());\n  };\n\n  const onChangeGrayscale = (value: number) => {\n    updateSearchParam(\"grayscale\", value.toString());\n  };\n\n  const onChangeDimensions = (width: number, height: number) => {\n    setSearchParams((searchParams) => {\n      searchParams.set(\"width\", width.toString());\n      searchParams.set(\"height\", height.toString());\n      return searchParams;\n    });\n  };\n\n  return {\n    height,\n    width,\n    blur,\n    grayscale,\n    onChangeDimensions,\n    onChangeBlur,\n    onChangeGrayscale,\n  };\n}\n"],"names":["baseUrl","async","fetchImages","_request$headers$get","page","arguments","length","undefined","limit","request","fetch","concat","images","json","map","_ref","id","author","download_url","preview","src","hasMore","headers","get","includes","fetchImage","height","width","EditableImage","forwardRef","props","ref","fallBackRef","useRef","canvasRef","blur","grayscale","useEffect","current","canvas","dimensions","filters","ctx","getContext","Error","image","Image","crossOrigin","onload","filter","Object","keys","key","join","drawImage","_jsx","FilterControls","onChangeBlur","onChangeGrayscale","_jsxs","Stack","direction","gap","padding","children","Box","Typography","Slider","defaultValue","min","max","valueLabelDisplay","onChangeCommitted","handleChangeBlur","e","value","handleChangeGrayscale","ResizeControls","onChangeDimensions","heightRef","widthRef","TextField","inputRef","required","label","Button","variant","onClick","handleApply","Number","Editor","imageId","useParams","isLoading","error","data","useQuery","queryKey","queryFn","keepPreviousData","searchParams","setSearchParams","useSearchParams","updateSearchParam","updatedSearchParams","URLSearchParams","toString","set","useImageEdits","Loading","_Fragment","position","top","right","bgcolor","sx","opacity","Accordion","AccordionSummary","expandIcon","ExpandMoreIcon","AccordionDetails","onDownloadImage","fileName","imageContent","toDataURL","downloadLink","document","createElement","download","href","click","downloadAsImage"],"sourceRoot":""}